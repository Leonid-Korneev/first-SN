{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogNewMessage/DialogNewMessage.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/DialogMessage/DialogMessage.jsx","utils/validators/validators.js","components/Dialogs/DialogNewMessage/DialogNewMessage.jsx","components/Dialogs/DialogNewMessage/DialogNewMessageContainer.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","style","dialog","activeClassName","activeDialog","link","to","alt","avatar","src","name","DialogMessage","message__item","author","text","required","value","undefined","DialogNewMessage","newMessage","onSubmit","data","addMessage","messageText","render","handleSubmit","form","e","Promise","resolve","then","reset","s","newMessage__container","textarea","component","validate","placeholder","send_btn","type","mapDispatchToProps","DialogNewMessageContainer","connect","state","dialogs","withAuthRedirect","dialogsElements","dialogsData","map","el","key","message","object","push","messageData","dialogsPaths","content","dialogs__items","dialog__content","DialogsContainer","compose","withRouter","Dialogs"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,kBAAoB,mCAAmC,sBAAwB,uCAAuC,SAAW,4B,oBCAvOD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,2BAA2B,aAAe,mC,0CCArGD,EAAOC,QAAU,CAAC,WAAa,qCAAqC,SAAW,qC,wHCmBhEC,EAZI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAMC,QAElB,kBAAC,IAAD,CAAWC,gBAAiBF,IAAMG,aAAcJ,UAAWC,IAAMI,KAAMC,GAAIR,GAA3E,IAAkF,yBAAKS,IAAI,SAASP,UAAWC,IAAMO,OAAQC,IAAKZ,EAAMW,SAAxI,IAAmJX,EAAMa,KAAzJ,Q,kBCDGC,EANO,SAACd,GACnB,OACI,yBAAKG,UAAWC,IAAMW,eAAgBf,EAAMgB,OAAO,IAAIhB,EAAMiB,O,4DCRxDC,EAAY,SAACC,GAEvB,OAASA,OAASC,EAAY,YCyClBC,EApCU,SAACrB,GAQtB,OACI,yBAAKG,UAAWC,IAAMkB,YAElB,kBAAC,IAAD,CAAMC,SATC,SAACC,GACZxB,EAAMyB,WAAWD,EAAKE,cAQQC,OACtB,YAA2B,IAAzBC,EAAwB,EAAxBA,aAAcC,EAAU,EAAVA,KACZ,OACI,0BAAMN,SAAU,SAACO,GACK,IAAIC,SAAS,SAAAC,GACvBJ,EAAaE,GACbE,OAEIC,MAAK,WACTJ,EAAKK,aAId,yBAAK/B,UAAWgC,IAAEC,uBACd,kBAAC,IAAD,CAAOjC,UAAWgC,IAAEE,SAAUxB,KAAM,cAAeyB,UAAW,WAAYC,SAAUrB,EAAUsB,YAAa,yBAC3G,4BAAQrC,UAAWC,IAAMqC,SAAUC,KAAM,UAAzC,uBCvB3BC,EAAsB,CACtBlB,gBAGWmB,EADiBC,aATV,SAACC,GACnB,MAAO,CACHC,QAASD,EAAMC,WAOkCJ,EAAzBE,CAA6CxB,G,QC+B9D2B,eAlCC,SAAChD,GAGb,IAHuB,EAGjBiD,EAAkBjD,EAAM+C,QAAQG,YAAYC,KAAI,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAAYC,IAAKD,EAAGlD,GAAIW,KAAMuC,EAAGvC,KAAMX,GAAIkD,EAAGlD,GAAIS,OAAQyC,EAAGzC,OACjD2C,QAASF,EAAGnC,UAC9EZ,EAAS,GALQ,cAMJL,EAAM+C,QAAQG,aANV,IAMvB,2BAA8C,CAAC,IAAtCK,EAAqC,QAC1ClD,EAAOmD,KAAKxD,EAAM+C,QAAQG,YAAYK,EAAOrD,GAAK,GAAGuD,YAAYN,KAAI,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAAgBC,IAAKD,EAAGlD,GAAIc,OAAQoC,EAAGpC,OACxBC,KAAMmC,EAAGnC,YARhF,8BAWvB,IAAMyC,EAAe1D,EAAM+C,QAAQG,YAAYC,KAAI,SAAAC,GAAE,OAAI,kBAAC,IAAD,CAAOC,IAAKD,EAAGlD,GAAID,KAAM,YAAcmD,EAAGlD,GACnCyB,OAAQ,kBAAM,6BAAMtB,EAAO+C,EAAGlD,GAAK,UAGnG,OACI,yBAAKC,UAAWC,IAAMuD,SAClB,yBAAKxD,UAAWC,IAAM2C,SAClB,yBAAK5C,UAAWC,IAAMwD,gBACjBX,GAEL,yBAAK9C,UAAWC,IAAMyD,iBACjBH,IAMT,kBAAC,IAAD,CAAOzD,KAAM,aAAc0B,OAAQ,kBAAM,kBAAC,EAAD,a,QCxB/CmC,EAAqBC,YAAQlB,aAPb,SAACC,GACnB,MAAO,CACHC,QAASD,EAAMC,YAKsCiB,IAAYhB,IAA9Ce,CAAgEE,GAE3EH","file":"static/js/3.34a5601b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__20h_2\",\"dialogs__items\":\"Dialogs_dialogs__items__3p-lm\",\"dialogs__messages\":\"Dialogs_dialogs__messages__kjx3_\",\"newMessage__container\":\"Dialogs_newMessage__container__MaNZJ\",\"textarea\":\"Dialogs_textarea__3pgLH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DialogItem_link__3V3RN\",\"avatar\":\"DialogItem_avatar__1y-sq\",\"activeDialog\":\"DialogItem_activeDialog__15Us9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newMessage\":\"DialogNewMessage_newMessage__2QzSk\",\"send_btn\":\"DialogNewMessage_send_btn__2HZqa\"};","import React from \"react\";\r\nimport style from \"./DialogItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className={style.dialog}>\r\n\r\n            <NavLink   activeClassName={style.activeDialog} className={style.link} to={path}> <img alt=\"avatar\" className={style.avatar} src={props.avatar}/> {props.name}  </NavLink>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from \"./DialogMessage.module.css\";\r\n\r\n\r\n\r\n\r\nconst DialogMessage = (props) => {\r\n    return (\r\n        <div className={style.message__item}>{props.author+\" \"+props.text }</div>\r\n    )\r\n}\r\n\r\nexport default DialogMessage;","export const required =  (value)=> {\r\n\r\n   return ((value) ? undefined : \"Required\")\r\n}\r\nexport const maxLengthCreator = (length)=> value=>{ if(value) { return (   (value.length<length) ? undefined : `Maximum length is ${length} symbols` )}}\r\n\r\n\r\n","import React from \"react\";\r\nimport style from \"./DialogNewMessage.module.css\";\r\nimport {Field, Form} from \"react-final-form\";\r\nimport s from \"../../Profile/MyPosts/MyPosts.module.css\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\n\r\n\r\nconst DialogNewMessage = (props) => {\r\n\r\n    let onSubmit = (data) => {\r\n        props.addMessage(data.messageText)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={style.newMessage}>\r\n\r\n            <Form onSubmit={onSubmit} render={\r\n                ({handleSubmit, form}) => {\r\n                    return (\r\n                        <form onSubmit={(e) => {\r\n                                let promise = new Promise((resolve => {\r\n                                    handleSubmit(e);\r\n                                    resolve()\r\n                                }))\r\n                                promise.then(() => {\r\n                                    form.reset()\r\n                                })\r\n                            }\r\n                        }>\r\n                           <div className={s.newMessage__container}>\r\n                               <Field className={s.textarea} name={\"messageText\"} component={\"textarea\"} validate={required} placeholder={\"Enter new message...\"}/>\r\n                               <button className={style.send_btn} type={\"submit\"}>Send Message</button>\r\n                           </div>\r\n                        </form>)}}/>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default DialogNewMessage;","import {addMessage, } from \"../../../redux/dialogs-reducer\";\r\nimport DialogNewMessage from \"./DialogNewMessage\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps =  {\r\n    addMessage\r\n}\r\nlet DialogNewMessageContainer = connect(mapStateToProps, mapDispatchToProps)(DialogNewMessage)\r\nexport default DialogNewMessageContainer;","import React from \"react\";\r\nimport style from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport DialogMessage from \"./DialogMessage/DialogMessage\";\r\n\r\n\r\nimport {Route} from \"react-router-dom\";\r\nimport DialogNewMessageContainer from \"./DialogNewMessage/DialogNewMessageContainer\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    const dialogsElements = props.dialogs.dialogsData.map(el => <DialogItem key={el.id} name={el.name} id={el.id} avatar={el.avatar}\r\n                                                                            message={el.text}/>);\r\n    const dialog = []\r\n    for (let object of props.dialogs.dialogsData) {\r\n        dialog.push(props.dialogs.dialogsData[object.id - 1].messageData.map(el => <DialogMessage  key={el.id} author={el.author}\r\n                                                                                                  text={el.text}/>))\r\n    }\r\n\r\n    const dialogsPaths = props.dialogs.dialogsData.map(el => <Route key={el.id} path={\"/dialogs/\" + el.id}\r\n                                                                    render={() => <div>{dialog[el.id - 1]}</div>}/>)\r\n\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            <div className={style.dialogs}>\r\n                <div className={style.dialogs__items}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={style.dialog__content}>\r\n                    {dialogsPaths}\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n            <Route path={\"/dialogs/*\"} render={() => <DialogNewMessageContainer/>}/>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default withAuthRedirect(Dialogs) ;","\r\nimport {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogs,\r\n\r\n    }\r\n}\r\n\r\nconst DialogsContainer =   compose(connect(mapStateToProps), withRouter, withAuthRedirect)(Dialogs)\r\n\r\nexport default  DialogsContainer\r\n"],"sourceRoot":""}