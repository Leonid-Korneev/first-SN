{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogNewMessage/DialogNewMessage.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/DialogMessage/DialogMessage.jsx","components/Dialogs/DialogNewMessage/DialogNewMessage.jsx","components/Dialogs/DialogNewMessage/DialogNewMessageContainer.jsx","components/Dialogs/Dialogs.jsx","components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","style","dialog","activeClassName","activeDialog","link","to","alt","avatar","src","name","DialogMessage","message__item","author","text","DialogNewMessage","newMessage","onSubmit","data","addMessage","messageText","render","handleSubmit","form","e","Promise","resolve","then","reset","s","newMessage__container","textarea","component","validate","required","placeholder","send_btn","type","mapDispatchToProps","DialogNewMessageContainer","connect","state","dialogs","Dialogs","dialogsElements","dialogsData","map","el","key","message","object","push","messageData","dialogsPaths","isAuth","content","dialogs__items","dialog__content","mapStateToProps","auth","DialogsContainer","compose","withRouter","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/3.f64db5b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__20h_2\",\"dialogs__items\":\"Dialogs_dialogs__items__3p-lm\",\"dialogs__messages\":\"Dialogs_dialogs__messages__kjx3_\",\"newMessage__container\":\"Dialogs_newMessage__container__MaNZJ\",\"textarea\":\"Dialogs_textarea__3pgLH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DialogItem_link__3V3RN\",\"avatar\":\"DialogItem_avatar__1y-sq\",\"activeDialog\":\"DialogItem_activeDialog__15Us9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newMessage\":\"DialogNewMessage_newMessage__2QzSk\",\"send_btn\":\"DialogNewMessage_send_btn__2HZqa\"};","import React from \"react\";\r\nimport style from \"./DialogItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className={style.dialog}>\r\n\r\n            <NavLink   activeClassName={style.activeDialog} className={style.link} to={path}> <img alt=\"avatar\" className={style.avatar} src={props.avatar}/> {props.name}  </NavLink>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from \"./DialogMessage.module.css\";\r\n\r\n\r\n\r\n\r\nconst DialogMessage = (props) => {\r\n    return (\r\n        <div className={style.message__item}>{props.author+\" \"+props.text }</div>\r\n    )\r\n}\r\n\r\nexport default DialogMessage;","import React from \"react\";\r\nimport style from \"./DialogNewMessage.module.css\";\r\nimport {Field, Form} from \"react-final-form\";\r\nimport s from \"../../Profile/MyPosts/MyPosts.module.css\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\n\r\n\r\nconst DialogNewMessage = (props) => {\r\n\r\n    let onSubmit = (data) => {\r\n        props.addMessage(data.messageText)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={style.newMessage}>\r\n\r\n            <Form onSubmit={onSubmit} render={\r\n                ({handleSubmit, form}) => {\r\n                    return (\r\n                        <form onSubmit={(e) => {\r\n                                let promise = new Promise((resolve => {\r\n                                    handleSubmit(e);\r\n                                    resolve()\r\n                                }))\r\n                                promise.then(() => {\r\n                                    form.reset()\r\n                                })\r\n                            }\r\n                        }>\r\n                           <div className={s.newMessage__container}>\r\n                               <Field className={s.textarea} name={\"messageText\"} component={\"textarea\"} validate={required} placeholder={\"Enter new message...\"}/>\r\n                               <button className={style.send_btn} type={\"submit\"}>Send Message</button>\r\n                           </div>\r\n                        </form>)}}/>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default DialogNewMessage;","import {addMessage, } from \"../../../redux/dialogs-reducer\";\r\nimport DialogNewMessage from \"./DialogNewMessage\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps =  {\r\n    addMessage\r\n}\r\nlet DialogNewMessageContainer = connect(mapStateToProps, mapDispatchToProps)(DialogNewMessage)\r\nexport default DialogNewMessageContainer;","import React from \"react\";\r\nimport style from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport DialogMessage from \"./DialogMessage/DialogMessage\";\r\n\r\n\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport DialogNewMessageContainer from \"./DialogNewMessage/DialogNewMessageContainer\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    const dialogsElements = props.dialogs.dialogsData.map(el => <DialogItem key={el.id} name={el.name} id={el.id} avatar={el.avatar}\r\n                                                                            message={el.text}/>);\r\n    const dialog = []\r\n    for (let object of props.dialogs.dialogsData) {\r\n        dialog.push(props.dialogs.dialogsData[object.id - 1].messageData.map(el => <DialogMessage  key={el.id} author={el.author}\r\n                                                                                                  text={el.text}/>))\r\n    }\r\n\r\n    const dialogsPaths = props.dialogs.dialogsData.map(el => <Route key={el.id} path={\"/dialogs/\" + el.id}\r\n                                                                    render={() => <div>{dialog[el.id - 1]}</div>}/>)\r\n\r\n    if (!props.isAuth) {\r\n        return (<Redirect to={\"/login\"}/>)\r\n    }\r\n    return (\r\n        <div className={style.content}>\r\n            <div className={style.dialogs}>\r\n                <div className={style.dialogs__items}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={style.dialog__content}>\r\n                    {dialogsPaths}\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n            <Route path={\"/dialogs/*\"} render={() => <DialogNewMessageContainer/>}/>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({ isAuth: state.auth.isAuth})\r\n}\r\n\r\nexport const withAuthRedirect = (Component)=> {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) {return <Redirect to={\"/login\"}/>}\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\n","\r\nimport {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogs,\r\n\r\n    }\r\n}\r\n\r\nconst DialogsContainer =   compose(connect(mapStateToProps), withRouter, withAuthRedirect)(Dialogs)\r\n\r\nexport default  DialogsContainer\r\n"],"sourceRoot":""}